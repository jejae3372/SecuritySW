//=================================
// [실습] 키스케줄 함수 추가한 AES8 암호화/복호화
// (1) AES32비트 테이블 추가: Te0[]~Te4[], Td0[]~Td4[]   - (AES8.cpp 확인)
// (2) 키스케줄 함수(32bit)추가 - (AES8.cpp 확인)
// (3) byte[16] <--> u32[4] 변환함수 작성 - (AES8.cpp 확인)
// (4) 키스케줄 함수(8bit) 작성 - (AES8.cpp 확인)
// (5) 키스케줄 이용한 암호/복호 확인 - (실습)
//=================================


#include "AES8.h"

//=================================

void Run_AES8_test() {
    byte pt[16] = { 0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77,
                    0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff };

    byte rk[11][16] = { {0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
                         0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f},
                        { 0xd6, 0xaa, 0x74, 0xfd, 0xd2, 0xaf, 0x72, 0xfa,
                          0xda, 0xa6, 0x78, 0xf1, 0xd6, 0xab, 0x76, 0xfe},
                        { 0xb6, 0x92, 0xcf, 0x0b, 0x64, 0x3d, 0xbd, 0xf1,
                          0xbe, 0x9b, 0xc5, 0x00, 0x68, 0x30, 0xb3, 0xfe},
                        { 0xb6, 0xff, 0x74, 0x4e, 0xd2, 0xc2, 0xc9, 0xbf,
                          0x6c, 0x59, 0x0c, 0xbf, 0x04, 0x69, 0xbf, 0x41},
                        { 0x47, 0xf7, 0xf7, 0xbc, 0x95, 0x35, 0x3e, 0x03,
                          0xf9, 0x6c, 0x32, 0xbc, 0xfd, 0x05, 0x8d, 0xfd},
                        { 0x3c, 0xaa, 0xa3, 0xe8, 0xa9, 0x9f, 0x9d, 0xeb,
                          0x50, 0xf3, 0xaf, 0x57, 0xad, 0xf6, 0x22, 0xaa},
                        { 0x5e, 0x39, 0x0f, 0x7d, 0xf7, 0xa6, 0x92, 0x96,
                          0xa7, 0x55, 0x3d, 0xc1, 0x0a, 0xa3, 0x1f, 0x6b},
                        { 0x14, 0xf9, 0x70, 0x1a, 0xe3, 0x5f, 0xe2, 0x8c,
                          0x44, 0x0a, 0xdf, 0x4d, 0x4e, 0xa9, 0xc0, 0x26},
                        { 0x47, 0x43, 0x87, 0x35, 0xa4, 0x1c, 0x65, 0xb9,
                          0xe0, 0x16, 0xba, 0xf4, 0xae, 0xbf, 0x7a, 0xd2},
                        { 0x54, 0x99, 0x32, 0xd1, 0xf0, 0x85, 0x57, 0x68,
                          0x10, 0x93, 0xed, 0x9c, 0xbe, 0x2c, 0x97, 0x4e},
                        { 0x13, 0x11, 0x1d, 0x7f, 0xe3, 0x94, 0x4a, 0x17,
                          0xf3, 0x07, 0xa7, 0x8b, 0x4d, 0x2b, 0x30, 0xc5 } };



    // ciphertext = "69c4e0d86a7b0430d8cdb78070b4c55a"
    byte correct_ct[16] = { 0x69, 0xc4, 0xe0, 0xd8, 0x6a, 0x7b, 0x04, 0x30,
                            0xd8, 0xcd, 0xb7, 0x80, 0x70, 0xb4, 0xc5, 0x5a };

    byte ct[16];

    printf("=== AES8 Enc/Dec Test without Keyschedule ===\n\n");

    AES_Encrypt(pt, rk, ct);

    printf("Encrypted CT = ");
    for (int i = 0; i < 16; i++) {
        printf("0x%02x ", ct[i]);
    }
    printf("\n");

    byte dec_pt[16];
    AES_Decrypt(ct, rk, dec_pt);
    printf("Decrypted PT = ");
    for (int i = 0; i < 16; i++) {
        printf("0x%02x ", dec_pt[i]);
    }
    printf("\n");


    // eq_rk
    byte eqrk[11][16];
    AES8_EqInvKey(rk, eqrk);

    AES_Eq_Decrypt(ct, eqrk, dec_pt);
    printf("Eq Decrypted PT = ");
    for (int i = 0; i < 16; i++) {
        printf("0x%02x ", dec_pt[i]);
    }
    printf("\n");

}

// (5) 키스케줄 이용한 암호/복호 확인 - (실습)
// [실습] 함수 Run_AES8_keyschedule_test()를 실행하여 확인한다.
/*
void Run_AES8_keyschedule_test() {
    byte pt[16] = { 0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77,
                    0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff };

    byte key[16] = { 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
                         0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f };

    // ciphertext = "69c4e0d86a7b0430d8cdb78070b4c55a"
    byte correct_ct[16] = { 0x69, 0xc4, 0xe0, 0xd8, 0x6a, 0x7b, 0x04, 0x30,
                            0xd8, 0xcd, 0xb7, 0x80, 0x70, 0xb4, 0xc5, 0x5a };

    byte rk[11][16];
    byte ct[16];

    printf("=== AES8 Enc/Dec Test including Keyschedule ===\n\n");

    AES8_KeySchedule(key, rk);  // 8비트 구현용 키스케줄

    AES_Encrypt(pt, rk, ct);

    printf("Encrypted CT = ");
    for (int i = 0; i < 16; i++) {
        printf("0x%02x ", ct[i]);
    }
    printf("\n");

    byte dec_pt[16];
    AES_Decrypt(ct, rk, dec_pt);
    printf("Decrypted PT = ");
    for (int i = 0; i < 16; i++) {
        printf("0x%02x ", dec_pt[i]);
    }
    printf("\n");


    // eq_rk
    byte eqrk[11][16];
    AES8_EqInvKey(rk, eqrk);

    AES_Eq_Decrypt(ct, eqrk, dec_pt);
    printf("Eq Decrypted PT = ");
    for (int i = 0; i < 16; i++) {
        printf("0x%02x ", dec_pt[i]);
    }
    printf("\n");

}
*/

//======================================

int main()
{    
    Run_AES8_test();
    //Run_AES8_keyschedule_test();
}

